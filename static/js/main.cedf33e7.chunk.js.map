{"version":3,"sources":["components/landingPage.js","components/projects.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["LandingPage","style","width","margin","className","col","src","alt","href","target","rel","aria-hidden","Component","Projects","shadow","height","expand","color","background","border","colored","Main","exact","path","component","App","fixedHeader","title","textDecoration","to","scroll","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8NA0CeA,E,uKArCP,OACI,yBAAKC,MAAO,CAACC,MAAO,OAAQC,OAAQ,SAChC,kBAAC,OAAD,CAAMC,UAAU,gBACZ,kBAAC,OAAD,CAAMC,IAAK,IACP,yBAAKD,UAAU,cACX,yBAAKE,IAAI,iEAAiEC,IAAI,YAElF,yBAAKH,UAAU,eACX,6CACA,q+BACA,6BACA,0IACA,yBAAKA,UAAU,gBAGX,uBAAGI,KAAK,mDAAmDC,OAAO,SAASC,IAAI,uBAC3E,uBAAGN,UAAU,wBAAwBO,cAAY,UAIrD,uBAAGH,KAAK,8BAA8BC,OAAO,SAASC,IAAI,uBACtD,uBAAGN,UAAU,sBAAsBO,cAAY,UAInD,uBAAGH,KAAK,8BAA8BC,OAAO,SAASC,IAAI,uBACtD,uBAAGN,UAAU,uBAAuBO,cAAY,mB,GA5B1DC,aCmBXC,E,uKAjBP,OACI,yBAAKZ,MAAO,CAACC,MAAO,OAAQC,OAAQ,QAASC,UAAU,iBACnD,wCACA,kBAAC,OAAD,CAAMU,OAAQ,EAAGb,MAAO,CAACC,MAAO,QAASa,OAAQ,QAASZ,OAAQ,SACjE,kBAAC,YAAD,CAAWa,QAAM,EAACf,MAAO,CAACgB,MAAO,OAAQC,WAAY,0QACrD,kBAAC,WAAD,qEAGD,kBAAC,cAAD,CAAaC,QAAM,GACnB,kBAAC,SAAD,CAAQC,SAAO,EAACZ,KAAK,6BAArB,uB,GAXOI,a,QCURS,EAPF,kBACT,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAYxB,IAClC,kBAAC,IAAD,CAAOsB,OAAK,EAACC,KAAK,YAAYC,UAAYX,M,QCsBnCY,MAzBf,WACE,OACF,6BACI,kBAAC,SAAD,CAAQC,aAAW,GACf,kBAAC,SAAD,CAAQtB,UAAU,eAAeuB,MAAO,kBAAC,IAAD,CAAM1B,MAAO,CAAC2B,eAAgB,OAAQX,MAAO,SAAUY,GAAG,KAA1D,gBAAmFC,QAAM,GAC7H,kBAAC,aAAD,KACI,uBAAGtB,KAA+B,cAAeC,OAAO,SAASC,IAAI,uBAArE,UACA,kBAAC,IAAD,CAAMmB,GAAG,aAAT,cAGR,kBAAC,SAAD,CAAQF,MAAO,kBAAC,IAAD,CAAM1B,MAAO,CAAC2B,eAAgB,OAAQX,MAAO,SAAUY,GAAG,KAA1D,iBACb,kBAAC,aAAD,KACM,uBAAGrB,KAA+B,cAAeC,OAAO,SAASC,IAAI,uBAArE,UACA,kBAAC,IAAD,CAAMmB,GAAG,aAAT,cAGR,kBAAC,UAAD,KACE,yBAAKzB,UAAU,iBACf,kBAAC,EAAD,UCZU2B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,cCTNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,SDoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.cedf33e7.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Grid, Cell } from 'react-mdl';\n\nclass LandingPage extends Component {\n    render() {\n        return (\n            <div style={{width: '100%', margin: 'auto'}}>\n                <Grid className=\"landing-grid\">\n                    <Cell col={12}> \n                        <div className=\"avatar-img\">\n                            <img src=\"https://ca.slack-edge.com/T02SA6VTR-UMD8M1KHC-90909baa1183-512\" alt=\"avatar\"/> \n                        </div>\n                        <div className=\"banner-text\">\n                            <h1>iOS Developer</h1>\n                            <p>My goal is to work on world class products that millions of users all around the world can love and enjoy. I am constantly looking for opportunities to grow and challenge myself in an innovative and fast paced environment. My experience ranges from some of the world's largest organisation including RBS and Shell helping shape the product road map by taking part in all aspects of project planning and delivery.\\n\\nMy journey into software development started in 2016 when I enrolled into Makers Academy, a 12 week software development bootcamp that transformed people with no coding experience into software engineers. In my final two weeks of the bootcamp I developed an app that helped people with visual impairment navigate the London underground using bluetooth beacons.\\n\\n Since then I have gained experience working on a wide variety of apps in cross-functional teams ranging in various industries such as E-commerce, Finance, Energy, Health and Retail.</p>\n                            <hr/>\n                            <p> Swift | Xcode | Cocoapods | Fastlane | Firebase | Node | Git | Jira | Testing | Automation | Agile working</p>\n                            <div className=\"social-links\"> \n\n                                {/* LinkedIn */}\n                                <a href=\"https://uk.linkedin.com/in/leke-abolade-26015872\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                    <i className=\"fa fa-linkedin-square\" aria-hidden=\"true\" />\n                                </a>\n\n                                {/* Github */}\n                                <a href=\"https://github.com/aabolade\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                    <i className=\"fa fa-github-square\" aria-hidden=\"true\" />\n                                </a>\n\n                                {/* Twitter */}\n                                <a href=\"https://twitter.com/leke_os\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                    <i className=\"fa fa-twitter-square\" aria-hidden=\"true\" />\n                                </a>\n                            </div>\n                        </div>\n                     </Cell>\n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default LandingPage","import React, { Component } from 'react'\nimport { Grid, Cell, Card, CardTitle, CardText, CardActions, CardMenu, Button, IconButton } from 'react-mdl';\n\nclass Projects extends Component {\n    render() {\n        return (\n            <div style={{width: '100%', margin: 'auto'}} className=\"projects-grid\">\n                <h1>Projects</h1>\n                <Card shadow={0} style={{width: '420px', height: '420px', margin: 'auto'}}>\n                 <CardTitle expand style={{color: '#fff', background: 'url(https://scontent-lht6-1.xx.fbcdn.net/v/t1.0-9/107964365_566760787328714_2077659241644355279_o.jpg?_nc_cat=100&ccb=2&_nc_sid=9267fe&_nc_ohc=JI9HOuHSMg0AX-9yOCC&_nc_ht=scontent-lht6-1.xx&oh=61138e7382f7463e644183f270e223e9&oe=60334C99) center / cover #46B6AC'}}></CardTitle>\n                 <CardText>\n                    Create and join weekly step contests with friends and family\n                </CardText>\n                <CardActions border>\n                <Button colored href=\"https://www.outrunapp.com\">View Project</Button>\n                </CardActions>\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default Projects","import React from 'react';\nimport LandingPage from './landingPage';\nimport Projects from './projects';\n\nimport { Switch, Route } from 'react-router-dom'\n\nconst Main = () => (\n    <Switch>\n        <Route exact path=\"/\" component={ LandingPage } />\n        <Route exact path=\"/projects\" component={ Projects } />\n    </Switch>\n)\n\nexport default Main;","import React from 'react';\nimport './App.css';\nimport { Layout, Header, Navigation, Drawer, Content } from 'react-mdl';\nimport Main from './components/main';\nimport { Link } from 'react-router-dom'; \n\nfunction App() {\n  return (\n<div>\n    <Layout fixedHeader>\n        <Header className=\"header-color\" title={<Link style={{textDecoration: 'none', color: 'white'}} to=\"/\">Leke Abolade</Link>} scroll>\n            <Navigation>\n                <a href={process.env.PUBLIC_URL + '/resume.pdf'} target=\"_blank\" rel=\"noopener noreferrer\">Resume</a>\n                <Link to=\"/projects\">Projects</Link>\n            </Navigation>\n        </Header>\n        <Drawer title={<Link style={{textDecoration: 'none', color: 'black'}} to=\"/\">Leke Abolade</Link>}>\n          <Navigation>\n                <a href={process.env.PUBLIC_URL + '/resume.pdf'} target=\"_blank\" rel=\"noopener noreferrer\">Resume</a>\n                <Link to=\"/projects\">Projects</Link>\n          </Navigation>\n        </Drawer>\n        <Content>\n          <div className=\"page-content\" />\n          <Main/>\n        </Content>\n    </Layout>\n</div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}